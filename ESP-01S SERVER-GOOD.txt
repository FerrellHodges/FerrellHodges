#include <ESP8266WiFi.h>

#define gpio0LEDPin 0 /* One LED connected to GPIO0 - D2 */
const char* ssid = xxxxxxxxx"; /* Add your router's SSID */
const char* password = "xxxxxxxxx"; /* Add the password */
int gpio0Value;
WiFiServer espServer(76); /* Instance of WiFiServer with port number 76 */
/* 86 is the Port Number for HTTP Web Server */

void setup()
{
  Serial.begin(115200); /* Begin Serial Communication with 115200 Baud Rate */
  pinMode(gpio0LEDPin, OUTPUT);
  digitalWrite(gpio0LEDPin, LOW);   /* Set the initial values of GPIO0 as LOW*/

  Serial.print("\n");
  Serial.print("Connecting to: ");
  Serial.println(ssid);
  WiFi.mode(WIFI_STA); /* Configure ESP8266 in STA Mode */
  WiFi.begin(ssid, password); /* Connect to Wi-Fi based on above SSID and Password */
  while (WiFi.status() != WL_CONNECTED)
  {
    Serial.print("*");
    delay(500);
  }
  Serial.print("\n");
  Serial.print("Connected to Wi-Fi: ");
  Serial.println(WiFi.SSID());
  delay(100);
  /* The next four lines of Code are used for assigning Static IP to ESP8266 */
  /* Do this only if you know what you are doing */
  /* You have to check for free IP Addresses from your Router and */
  /* assign it to ESP8266 */
  /* If you are confirtable with this step, please un-comment the next four lines *
    /* if not, leave it as it is and proceed */
#define SERVER_IP "192.168.1.92:76" // PC address with emulation on host
  IPAddress ip(192, 168, 1, 92);
  IPAddress gateway(192, 168, 1, 1);
  IPAddress subnet(255, 255, 255, 0);
  WiFi.config(ip, gateway, subnet);
  delay(2000);
  Serial.print("\n");
  Serial.println("Starting Hodges ESP8266 Web Server...");
  espServer.begin(); /* Start the HTTP web Server */
  Serial.println("Hodges Web Server Started");
  Serial.print("\n");
  Serial.print("The URL of Hodges Web Server is: ");
  Serial.print("http://");
  Serial.println(WiFi.localIP());
  Serial.print("\n");
  Serial.println("Use the above URL in your Browser to access ESP8266 Web Server\n");
}

void loop()
{
  WiFiClient client = espServer.available(); /* Check if a client is available */
  if (!client)
  {
    return;
  }

  Serial.println("New Client!!!");

  String request = client.readStringUntil('\r'); /* Read the first line of the request from client */
  Serial.println(request); /* Print the request on the Serial monitor */
  /* The request is in the form of HTTP GET Method */
  client.flush();

  /* Extract the URL of the request */
  /* We have four URLs. If IP Address is 192.168.1.62 (for example),
     then URLs are:
     192.168.1.62/GPIO0ON and its request is GET /GPIO0ON HTTP/1.1
     192.168.1.62/GPIO0OFF and its request is GET /GPIO0OFF HTTP/1.1
    /* Based on the URL from the request, turn the LEDs ON or OFF */
  if (request.indexOf("/GPIO0ON") != -1)
  {
    Serial.println("GPIO0 LED is ON");
    digitalWrite(gpio0LEDPin, HIGH);
    gpio0Value = HIGH;
  }
  if (request.indexOf("/GPIO0OFF") != -1)
  {
    Serial.println("GPIO0 LED is OFF");
    digitalWrite(gpio0LEDPin, LOW);
    gpio0Value = LOW;
  }

  /* HTTP Response in the form of HTML Web Page */
  client.println("HTTP/1.1 200 OK");
  client.println("Content-Type: text/html");
  client.println(); //  IMPORTANT
  client.println("<!DOCTYPE HTML>");
  client.println("<html>");
  client.println("<head>");
  client.println("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
  client.println("<link rel=\"icon\" href=\"data:,\">");
  /* CSS Styling for Buttons and Web Page */
  client.println("<style>");
  client.println("html { font-family: Courier New; display: inline-block; margin: 0px auto; text-align: center;}");
  client.println(".button { background-color: #4CAF50;  color: white; padding: 16px 40px;");
  client.println("text-decoration: none; font-size: 30px; margin: 10px;border-radius: 50%; cursor: pointer;}");
  client.println(".button3 {background-color: #4CAF50;}");
  client.println(".button11 {background-color: #E12B38;}");
  client.println("</style>");
  client.println("</head>");

  /* The main body of the Web Page */
  client.println("<body>");
  client.println("<h2>ESP8266 Web Server</h2>");

  if (gpio0Value == LOW)
  {
    client.println("<p>GPIO0 LED Status: OFF</p>");
    client.print("<p><a href=\"/GPIO0ON\"><button class=\"button button11\">Click to turn ON</button></a></p>");
  }
  else
  {
    client.println("<p>GPIO0 LED Status: ON</p>");
    client.print("<p><a href=\"/GPIO0OFF\"><button class=\"button button3\">Click to turn OFF</button></a></p>");
  }

  client.println("</body>");
  client.println("</html>");
  client.print("\n");

  delay(1);
  /* Close the connection */
  client.stop();
  Serial.println("Client disconnected");
  Serial.print("\n");
}